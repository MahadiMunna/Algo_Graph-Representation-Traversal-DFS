# adjacency_matrix_implementation

unweighted-
sample input:
4
5
1 2
1 3
2 4
4 3
3 2
sample output(undirected):
0 1 1 0 
1 0 1 1 
1 1 0 1 
0 1 1 0 
sample output(directed):
0 1 1 0 
0 0 0 1 
0 1 0 0 
0 0 1 0 

weighted-
sample input:
4
5
1 2 8
1 3 9
2 4 11
4 3 17
3 2 15
sample output(undirected):
0 8 9 0 
8 0 15 11 
9 15 0 17 
0 11 17 0  
sample output(directed):
0 8 9 0 
0 0 0 11 
0 15 0 0 
0 0 17 0  

# adjacency_list_implementation

unweighted-
sample input:
4
5
1 2
1 3
2 4
4 3
3 2
sample output(undirected):
List 1: 2 3 
List 2: 1 4 3 
List 3: 1 4 2 
List 4: 2 3  
sample output(directed):
List 1: 2 3 
List 2: 4 
List 3: 2 
List 4: 3  

weighted-
sample input:
4
5
1 2 8
1 3 9
2 4 11
4 3 17
3 2 15
sample output(undirected):
List 1: ( 2,8 ) ( 3,9 ) 
List 2: ( 1,8 ) ( 4,11 ) ( 3,15 ) 
List 3: ( 1,9 ) ( 4,17 ) ( 2,15 ) 
List 4: ( 2,11 ) ( 3,17 ) 
  
sample output(directed):
List 1: ( 2,8 ) ( 3,9 ) 
List 2: ( 4,11 ) 
List 3: ( 2,15 ) 
List 4: ( 3,17 )   


# depth_first_search:

sample input:
10
9
1 2
1 3
1 10
2 4
3 5
3 6
4 6
4 8
6 9
sample output:
Visiting node: 1
Visiting node: 2
Visiting node: 4
Visiting node: 7
Visiting node: 8
Visiting node: 3
Visiting node: 5
Visiting node: 6
Visiting node: 9
Visiting node: 10

sample input:
9
10
1 2
2 3
3 8
1 5
5 4
5 6
4 7
6 7
7 8
8 9
sample output:
Visiting node: 1
Visiting node: 2
Visiting node: 3
Visiting node: 8
Visiting node: 7
Visiting node: 4
Visiting node: 5
Visiting node: 6
Visiting node: 9

